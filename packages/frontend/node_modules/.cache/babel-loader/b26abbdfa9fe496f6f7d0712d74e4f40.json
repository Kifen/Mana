{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/kifen/Dev/interview-test/StakePool/packages/frontend/src/index.tsx\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Web3ReactProvider } from '@web3-react/core';\nimport { ethers } from 'ethers';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\n\nfunction getLibrary(provider) {\n  return new ethers.providers.Web3Provider(provider); // this will vary according to whether you use e.g. ethers or web3.js\n}\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(Web3ReactProvider, {\n  getLibrary: getLibrary,\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 14,\n  columnNumber: 3\n}, this), document.getElementById('root'));","map":{"version":3,"sources":["/Users/kifen/Dev/interview-test/StakePool/packages/frontend/src/index.tsx"],"names":["React","ReactDOM","Web3ReactProvider","ethers","App","getLibrary","provider","providers","Web3Provider","render","document","getElementById"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,iBAAT,QAAkC,kBAAlC;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,OAAO,aAAP;AACA,OAAO,sCAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;;AAEA,SAASC,UAAT,CAAoBC,QAApB,EAAiE;AAC/D,SAAO,IAAIH,MAAM,CAACI,SAAP,CAAiBC,YAArB,CAAkCF,QAAlC,CAAP,CAD+D,CACZ;AACpD;;AAEDL,QAAQ,CAACQ,MAAT,eACE,QAAC,iBAAD;AAAmB,EAAA,UAAU,EAAEJ,UAA/B;AAAA,yBACE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,QADF,EAIEK,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAJF","sourcesContent":["import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Web3ReactProvider } from '@web3-react/core'\nimport { ethers } from 'ethers'\nimport './index.css'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport App from './App'\n\nfunction getLibrary(provider: ethers.providers.ExternalProvider) {\n  return new ethers.providers.Web3Provider(provider) // this will vary according to whether you use e.g. ethers or web3.js\n}\n\nReactDOM.render(\n  <Web3ReactProvider getLibrary={getLibrary}>\n    <App />\n  </Web3ReactProvider>,\n  document.getElementById('root'),\n)\n"]},"metadata":{},"sourceType":"module"}