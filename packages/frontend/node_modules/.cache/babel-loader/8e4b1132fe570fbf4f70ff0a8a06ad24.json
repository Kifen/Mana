{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/kifen/Dev/interview-test/StakePool/packages/frontend/src/components/Main/Main.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Form, InputGroup, Button } from 'react-bootstrap';\nimport { BigNumber } from 'ethers';\nimport { useWeb3React } from '@web3-react/core';\nimport { MetaMask } from '../../connectors';\nimport './main.css';\nimport PendingTxModal from './PendingTxModal';\nimport Message from '../Message/Message';\nimport ApproveModal from '../ApproveModal/ApproveModal';\nimport { getMANABalance, getxManaBalance } from '../../services/utils';\n\nconst getUser = (chainId, account, library) => {\n  const user = {\n    account,\n    chainId,\n    library\n  };\n  return user;\n};\n\nconst Main = () => {\n  _s();\n\n  const {\n    active,\n    activate,\n    library,\n    account,\n    chainId\n  } = useWeb3React();\n  let decimals = BigNumber.from(18);\n  decimals = BigNumber.from(10).pow(decimals);\n  const [value, setValue] = useState(null);\n  const [stake, setStake] = useState(true);\n  const [unstake, setUnstake] = useState(false);\n  const [message, setMessage] = useState('');\n  const [manaBalance, setManaBalance] = useState('');\n  const [xManaBalance, setXmanaBalance] = useState('');\n  const [show, setShow] = useState(false);\n  const [txShow, setTxShow] = useState(false);\n  const [pendingHash, setPendingHash] = useState('');\n  useEffect(() => {\n    async function getBalances() {\n      let xMana = await getxManaBalance(getUser(chainId, account, library));\n      xMana = xMana.div(decimals);\n      const xManaBal = xMana.toString();\n      let mana = await getMANABalance(getUser(chainId, account, library));\n      mana = mana.div(decimals);\n      const manaBal = mana.toString();\n      setXmanaBalance(xManaBal);\n      setManaBalance(manaBal);\n    }\n\n    if (active) {\n      activate(MetaMask);\n      getBalances();\n    }\n  }, [active, activate, library, account, chainId, decimals]);\n\n  const handleSubmit = async e => {\n    e.preventDefault(); // if (!value) return\n    // if (buy) {\n    //   const buyAmount = BigNumber.from(value)\n    //   const hash = await initateBuy(\n    //     getUser(chainId, account, library),\n    //     buyAmount,\n    //     setMessage,\n    //   )\n    //   if (hash) {\n    //     setPendingHash(hash)\n    //     setTxShow(true)\n    //   }\n    // } else {\n    //   const sellAmount = BigNumber.from(value)\n    //   const hash = await initiateSell(\n    //     getUser(chainId, account, library),\n    //     sellAmount,\n    //     setMessage,\n    //   )\n    //   if (hash) {\n    //     setPendingHash(hash)\n    //     setTxShow(true)\n    //   }\n    // }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-page\",\n    children: [/*#__PURE__*/_jsxDEV(ApproveModal, {\n      user: getUser(chainId, account, library),\n      show: show,\n      onHide: () => setShow(false),\n      setShow: setShow,\n      setPendingHash: setPendingHash,\n      setTxShow: setTxShow\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PendingTxModal, {\n      show: txShow,\n      onHide: () => setTxShow(false),\n      hash: pendingHash,\n      setTxShow: setTxShow\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"balance-div mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bln\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"bal-name\",\n            children: \"xMana Balance\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"baln\",\n            children: `${xManaBalance} xMana`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bln\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"bal-name\",\n            children: \"Mana Balance\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"baln\",\n            children: `${manaBalance} Mana`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), message && /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"danger\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-center\",\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n          style: {\n            float: 'right',\n            cursor: 'pointer',\n            marginTop: '5px'\n          },\n          className: \"far fa-times-circle\",\n          onClick: () => setMessage(''),\n          onKeyDown: () => setMessage(''),\n          \"aria-hidden\": \"true\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"access-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"buy-sell mb-2\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => {\n              setStake(prev => !prev);\n              setUnstake(prev => !prev);\n            },\n            variant: \"outline\",\n            className: `Stake ${stake && `borderr`}`,\n            children: \"Stake\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => {\n              setUnstake(prev => !prev);\n              setStake(prev => !prev);\n            },\n            variant: \"outline\",\n            className: `unstake ${unstake && `borderr`}`,\n            children: \"Unstake\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"top\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form\",\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            onSubmit: handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(InputGroup, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"number\",\n                required: true,\n                placeholder: \"0\",\n                value: value,\n                onChange: e => setValue(parseInt(e.target.value, 10))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(InputGroup.Append, {\n                children: stake ? /*#__PURE__*/_jsxDEV(InputGroup.Text, {\n                  children: \"MANA\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 167,\n                  columnNumber: 28\n                }, this) : /*#__PURE__*/_jsxDEV(InputGroup.Text, {\n                  children: \"MANA\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 167,\n                  columnNumber: 70\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"button\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                type: \"submit\",\n                variant: \"dark\",\n                className: \"submit-btn\",\n                children: stake ? 'Stake' : 'Unstake'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), stake && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"approve-text\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: () => setShow(true),\n          onKeyDown: () => setShow(true),\n          \"aria-hidden\": \"true\",\n          children: /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Set Approvals\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Main, \"NmBBNyIG6GeM9sCoY8N188Nh36Q=\", false, function () {\n  return [useWeb3React];\n});\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["/Users/kifen/Dev/interview-test/StakePool/packages/frontend/src/components/Main/Main.tsx"],"names":["React","useEffect","useState","Form","InputGroup","Button","BigNumber","useWeb3React","MetaMask","PendingTxModal","Message","ApproveModal","getMANABalance","getxManaBalance","getUser","chainId","account","library","user","Main","active","activate","decimals","from","pow","value","setValue","stake","setStake","unstake","setUnstake","message","setMessage","manaBalance","setManaBalance","xManaBalance","setXmanaBalance","show","setShow","txShow","setTxShow","pendingHash","setPendingHash","getBalances","xMana","div","xManaBal","toString","mana","manaBal","handleSubmit","e","preventDefault","float","cursor","marginTop","prev","parseInt","target"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,IAAT,EAAeC,UAAf,EAA2BC,MAA3B,QAAyC,iBAAzC;AACA,SAASC,SAAT,QAA0B,QAA1B;AACA,SAASC,YAAT,QAA6B,kBAA7B;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,OAAO,YAAP;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AAEA,SACEC,cADF,EAEEC,eAFF,QAIO,sBAJP;;AAMA,MAAMC,OAAO,GAAG,CAACC,OAAD,EAAmBC,OAAnB,EAAkCC,OAAlC,KAA0D;AACxE,QAAMC,IAAI,GAAG;AACXF,IAAAA,OADW;AAEXD,IAAAA,OAFW;AAGXE,IAAAA;AAHW,GAAb;AAKA,SAAOC,IAAP;AACD,CAPD;;AASA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACjB,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,QAAV;AAAoBJ,IAAAA,OAApB;AAA6BD,IAAAA,OAA7B;AAAsCD,IAAAA;AAAtC,MAAkDR,YAAY,EAApE;AACA,MAAIe,QAAQ,GAAGhB,SAAS,CAACiB,IAAV,CAAe,EAAf,CAAf;AACAD,EAAAA,QAAQ,GAAGhB,SAAS,CAACiB,IAAV,CAAe,EAAf,EAAmBC,GAAnB,CAAuBF,QAAvB,CAAX;AAEA,QAAM,CAACG,KAAD,EAAQC,QAAR,IAAoBxB,QAAQ,CAAa,IAAb,CAAlC;AACA,QAAM,CAACyB,KAAD,EAAQC,QAAR,IAAoB1B,QAAQ,CAAU,IAAV,CAAlC;AACA,QAAM,CAAC2B,OAAD,EAAUC,UAAV,IAAwB5B,QAAQ,CAAU,KAAV,CAAtC;AACA,QAAM,CAAC6B,OAAD,EAAUC,UAAV,IAAwB9B,QAAQ,CAAS,EAAT,CAAtC;AACA,QAAM,CAAC+B,WAAD,EAAcC,cAAd,IAAgChC,QAAQ,CAAS,EAAT,CAA9C;AACA,QAAM,CAACiC,YAAD,EAAeC,eAAf,IAAkClC,QAAQ,CAAS,EAAT,CAAhD;AACA,QAAM,CAACmC,IAAD,EAAOC,OAAP,IAAkBpC,QAAQ,CAAU,KAAV,CAAhC;AACA,QAAM,CAACqC,MAAD,EAASC,SAAT,IAAsBtC,QAAQ,CAAU,KAAV,CAApC;AACA,QAAM,CAACuC,WAAD,EAAcC,cAAd,IAAgCxC,QAAQ,CAAe,EAAf,CAA9C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAe0C,WAAf,GAA6B;AAC3B,UAAIC,KAAK,GAAG,MAAM/B,eAAe,CAACC,OAAO,CAACC,OAAD,EAAUC,OAAV,EAAmBC,OAAnB,CAAR,CAAjC;AACA2B,MAAAA,KAAK,GAAGA,KAAK,CAACC,GAAN,CAAUvB,QAAV,CAAR;AACA,YAAMwB,QAAQ,GAAGF,KAAK,CAACG,QAAN,EAAjB;AAEA,UAAIC,IAAI,GAAG,MAAMpC,cAAc,CAACE,OAAO,CAACC,OAAD,EAAUC,OAAV,EAAmBC,OAAnB,CAAR,CAA/B;AACA+B,MAAAA,IAAI,GAAGA,IAAI,CAACH,GAAL,CAASvB,QAAT,CAAP;AACA,YAAM2B,OAAO,GAAGD,IAAI,CAACD,QAAL,EAAhB;AAEAX,MAAAA,eAAe,CAACU,QAAD,CAAf;AACAZ,MAAAA,cAAc,CAACe,OAAD,CAAd;AACD;;AAED,QAAI7B,MAAJ,EAAY;AACVC,MAAAA,QAAQ,CAACb,QAAD,CAAR;AACAmC,MAAAA,WAAW;AACZ;AACF,GAlBQ,EAkBN,CAACvB,MAAD,EAASC,QAAT,EAAmBJ,OAAnB,EAA4BD,OAA5B,EAAqCD,OAArC,EAA8CO,QAA9C,CAlBM,CAAT;;AAoBA,QAAM4B,YAAY,GAAG,MAAOC,CAAP,IAA+C;AAClEA,IAAAA,CAAC,CAACC,cAAF,GADkE,CAElE;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACD,GA5BD;;AA8BA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACE,QAAC,YAAD;AACE,MAAA,IAAI,EAAEtC,OAAO,CAACC,OAAD,EAAUC,OAAV,EAAmBC,OAAnB,CADf;AAEE,MAAA,IAAI,EAAEoB,IAFR;AAGE,MAAA,MAAM,EAAE,MAAMC,OAAO,CAAC,KAAD,CAHvB;AAIE,MAAA,OAAO,EAAEA,OAJX;AAKE,MAAA,cAAc,EAAEI,cALlB;AAME,MAAA,SAAS,EAAEF;AANb;AAAA;AAAA;AAAA;AAAA,YADF,eASE,QAAC,cAAD;AACE,MAAA,IAAI,EAAED,MADR;AAEE,MAAA,MAAM,EAAE,MAAMC,SAAS,CAAC,KAAD,CAFzB;AAGE,MAAA,IAAI,EAAEC,WAHR;AAIE,MAAA,SAAS,EAAED;AAJb;AAAA;AAAA;AAAA;AAAA,YATF,eAeE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,KAAf;AAAA,kCACE;AAAM,YAAA,SAAS,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAM,YAAA,SAAS,EAAC,MAAhB;AAAA,sBAAyB,GAAEL,YAAa;AAAxC;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAKE;AAAK,UAAA,SAAS,EAAC,KAAf;AAAA,kCACE;AAAM,YAAA,SAAS,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAM,YAAA,SAAS,EAAC,MAAhB;AAAA,sBAAyB,GAAEF,WAAY;AAAvC;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAWGF,OAAO,iBACN,QAAC,OAAD;AAAS,QAAA,OAAO,EAAC,QAAjB;AAAA,gCACE;AAAM,UAAA,SAAS,EAAC,aAAhB;AAAA,oBAA+BA;AAA/B;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,KAAK,EAAE;AAAEsB,YAAAA,KAAK,EAAE,OAAT;AAAkBC,YAAAA,MAAM,EAAE,SAA1B;AAAqCC,YAAAA,SAAS,EAAE;AAAhD,WADT;AAEE,UAAA,SAAS,EAAC,qBAFZ;AAGE,UAAA,OAAO,EAAE,MAAMvB,UAAU,CAAC,EAAD,CAH3B;AAIE,UAAA,SAAS,EAAE,MAAMA,UAAU,CAAC,EAAD,CAJ7B;AAKE,yBAAY;AALd;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAZJ,eAuBE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,eAAf;AAAA,kCACE,QAAC,MAAD;AACE,YAAA,OAAO,EAAE,MAAM;AACbJ,cAAAA,QAAQ,CAAE4B,IAAD,IAAU,CAACA,IAAZ,CAAR;AACA1B,cAAAA,UAAU,CAAE0B,IAAD,IAAU,CAACA,IAAZ,CAAV;AACD,aAJH;AAKE,YAAA,OAAO,EAAC,SALV;AAME,YAAA,SAAS,EAAG,SAAQ7B,KAAK,IAAK,SAAS,EANzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAWE,QAAC,MAAD;AACE,YAAA,OAAO,EAAE,MAAM;AACbG,cAAAA,UAAU,CAAE0B,IAAD,IAAU,CAACA,IAAZ,CAAV;AACA5B,cAAAA,QAAQ,CAAE4B,IAAD,IAAU,CAACA,IAAZ,CAAR;AACD,aAJH;AAKE,YAAA,OAAO,EAAC,SALV;AAME,YAAA,SAAS,EAAG,WAAU3B,OAAO,IAAK,SAAS,EAN7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAXF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAuBE;AAAK,UAAA,SAAS,EAAC,KAAf;AAAA,iCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAvBF,eA0BE;AAAK,UAAA,SAAS,EAAC,MAAf;AAAA,iCACE,QAAC,IAAD;AAAM,YAAA,QAAQ,EAAEqB,YAAhB;AAAA,oCACE,QAAC,UAAD;AAAA,sCACE,QAAC,IAAD,CAAM,OAAN;AACE,gBAAA,IAAI,EAAC,QADP;AAEE,gBAAA,QAAQ,MAFV;AAGE,gBAAA,WAAW,EAAC,GAHd;AAIE,gBAAA,KAAK,EAAEzB,KAJT;AAKE,gBAAA,QAAQ,EAAG0B,CAAD,IAAOzB,QAAQ,CAAC+B,QAAQ,CAACN,CAAC,CAACO,MAAF,CAASjC,KAAV,EAAiB,EAAjB,CAAT;AAL3B;AAAA;AAAA;AAAA;AAAA,sBADF,eAQE,QAAC,UAAD,CAAY,MAAZ;AAAA,0BACGE,KAAK,gBAAG,QAAC,UAAD,CAAY,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAH,gBAA6C,QAAC,UAAD,CAAY,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADrD;AAAA;AAAA;AAAA;AAAA,sBARF;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAoBE;AAAK,cAAA,SAAS,EAAC,QAAf;AAAA,qCACE,QAAC,MAAD;AAAQ,gBAAA,IAAI,EAAC,QAAb;AAAsB,gBAAA,OAAO,EAAC,MAA9B;AAAqC,gBAAA,SAAS,EAAC,YAA/C;AAAA,0BACGA,KAAK,GAAG,OAAH,GAAa;AADrB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBApBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBA1BF;AAAA;AAAA;AAAA;AAAA;AAAA,cAvBF,EA8EGA,KAAK,iBACJ;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,+BACE;AACE,UAAA,OAAO,EAAE,MAAMW,OAAO,CAAC,IAAD,CADxB;AAEE,UAAA,SAAS,EAAE,MAAMA,OAAO,CAAC,IAAD,CAF1B;AAGE,yBAAY,MAHd;AAAA,iCAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cA/EJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAfF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA4GD,CA7KD;;GAAMnB,I;UACoDZ,Y;;;KADpDY,I;AA+KN,eAAeA,IAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { Form, InputGroup, Button } from 'react-bootstrap'\nimport { BigNumber } from 'ethers'\nimport { useWeb3React } from '@web3-react/core'\nimport { MetaMask } from '../../connectors'\nimport './main.css'\nimport PendingTxModal from './PendingTxModal'\nimport Message from '../Message/Message'\nimport ApproveModal from '../ApproveModal/ApproveModal'\nimport { User } from '../../services/types'\nimport {\n  getMANABalance,\n  getxManaBalance,\n  userCanUnstakeInLockedPool,\n} from '../../services/utils'\n\nconst getUser = (chainId?: number, account?: any, library?: any): User => {\n  const user = {\n    account,\n    chainId,\n    library,\n  }\n  return user\n}\n\nconst Main = () => {\n  const { active, activate, library, account, chainId } = useWeb3React()\n  let decimals = BigNumber.from(18)\n  decimals = BigNumber.from(10).pow(decimals)\n\n  const [value, setValue] = useState<any | null>(null)\n  const [stake, setStake] = useState<boolean>(true)\n  const [unstake, setUnstake] = useState<boolean>(false)\n  const [message, setMessage] = useState<string>('')\n  const [manaBalance, setManaBalance] = useState<string>('')\n  const [xManaBalance, setXmanaBalance] = useState<string>('')\n  const [show, setShow] = useState<boolean>(false)\n  const [txShow, setTxShow] = useState<boolean>(false)\n  const [pendingHash, setPendingHash] = useState<string | any>('')\n\n  useEffect(() => {\n    async function getBalances() {\n      let xMana = await getxManaBalance(getUser(chainId, account, library))\n      xMana = xMana.div(decimals)\n      const xManaBal = xMana.toString()\n\n      let mana = await getMANABalance(getUser(chainId, account, library))\n      mana = mana.div(decimals)\n      const manaBal = mana.toString()\n\n      setXmanaBalance(xManaBal)\n      setManaBalance(manaBal)\n    }\n\n    if (active) {\n      activate(MetaMask)\n      getBalances()\n    }\n  }, [active, activate, library, account, chainId, decimals])\n\n  const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault()\n    // if (!value) return\n\n    // if (buy) {\n    //   const buyAmount = BigNumber.from(value)\n    //   const hash = await initateBuy(\n    //     getUser(chainId, account, library),\n    //     buyAmount,\n    //     setMessage,\n    //   )\n    //   if (hash) {\n    //     setPendingHash(hash)\n    //     setTxShow(true)\n    //   }\n    // } else {\n    //   const sellAmount = BigNumber.from(value)\n    //   const hash = await initiateSell(\n    //     getUser(chainId, account, library),\n    //     sellAmount,\n    //     setMessage,\n    //   )\n\n    //   if (hash) {\n    //     setPendingHash(hash)\n    //     setTxShow(true)\n    //   }\n    // }\n  }\n\n  return (\n    <div className=\"main-page\">\n      <ApproveModal\n        user={getUser(chainId, account, library)}\n        show={show}\n        onHide={() => setShow(false)}\n        setShow={setShow}\n        setPendingHash={setPendingHash}\n        setTxShow={setTxShow}\n      />\n      <PendingTxModal\n        show={txShow}\n        onHide={() => setTxShow(false)}\n        hash={pendingHash}\n        setTxShow={setTxShow}\n      />\n      <div className=\"main\">\n        <div className=\"balance-div mb-4\">\n          <div className=\"bln\">\n            <span className=\"bal-name\">xMana Balance</span>\n            <span className=\"baln\">{`${xManaBalance} xMana`}</span>\n          </div>\n          <div className=\"bln\">\n            <span className=\"bal-name\">Mana Balance</span>\n            <span className=\"baln\">{`${manaBalance} Mana`}</span>\n          </div>\n        </div>\n        {message && (\n          <Message variant=\"danger\">\n            <span className=\"text-center\">{message}</span>\n            <i\n              style={{ float: 'right', cursor: 'pointer', marginTop: '5px' }}\n              className=\"far fa-times-circle\"\n              onClick={() => setMessage('')}\n              onKeyDown={() => setMessage('')}\n              aria-hidden=\"true\"\n            />\n          </Message>\n        )}\n        <div className=\"access-box\">\n          <div className=\"buy-sell mb-2\">\n            <Button\n              onClick={() => {\n                setStake((prev) => !prev)\n                setUnstake((prev) => !prev)\n              }}\n              variant=\"outline\"\n              className={`Stake ${stake && `borderr`}`}\n            >\n              Stake\n            </Button>\n            <Button\n              onClick={() => {\n                setUnstake((prev) => !prev)\n                setStake((prev) => !prev)\n              }}\n              variant=\"outline\"\n              className={`unstake ${unstake && `borderr`}`}\n            >\n              Unstake\n            </Button>\n          </div>\n          <div className=\"top\">\n            <span>Input</span>\n          </div>\n          <div className=\"form\">\n            <Form onSubmit={handleSubmit}>\n              <InputGroup>\n                <Form.Control\n                  type=\"number\"\n                  required\n                  placeholder=\"0\"\n                  value={value}\n                  onChange={(e) => setValue(parseInt(e.target.value, 10))}\n                />\n                <InputGroup.Append>\n                  {stake ? <InputGroup.Text>MANA</InputGroup.Text> : <InputGroup.Text>MANA</InputGroup.Text>}\n                </InputGroup.Append>\n              </InputGroup>\n              {/* {value && (\n                <div className=\"info-span\">\n                  <span className=\"text-muted\">\n                    {value} TOK = {buyPrice} DAI\n                  </span>\n                </div>\n              )} */}\n              <div className=\"button\">\n                <Button type=\"submit\" variant=\"dark\" className=\"submit-btn\">\n                  {stake ? 'Stake' : 'Unstake'}\n                </Button>\n              </div>\n            </Form>\n          </div>\n        </div>\n        {stake && (\n          <div className=\"approve-text\">\n            <span\n              onClick={() => setShow(true)}\n              onKeyDown={() => setShow(true)}\n              aria-hidden=\"true\"\n            >\n              <b>Set Approvals</b>\n            </span>\n          </div>\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport default Main\n"]},"metadata":{},"sourceType":"module"}